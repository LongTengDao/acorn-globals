{
	"version":
		3,
	"file":
		"index.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","scope.ts","DECLARATION_VISITORS.ts","ReferenceVisitors.ts","default.ts"],
	"sourcesContent":
		[
			"export default '1.8.0';",
			"import WeakMap from '.WeakMap';\nimport Error from '.Error';\nimport Set from '.Set';\n\nconst SCOPE_NAMES                             = new WeakMap;\n\nlet scope_names                             = SCOPE_NAMES;\n\nexport const scope_new = ()       => {\n\tif ( scope_names!==SCOPE_NAMES  ) { throw Error(`Can't start new finding before previous finding finished.`); }\n\tscope_names = new WeakMap;\n};\n\nexport const scope_add = (scope      , { name }            )       => {\n\tconst names = scope_names.get(scope);\n\tnames\n\t\t? names.add(name)\n\t\t: scope_names.set(scope, new Set        ().add(name));\n};\n\nexport const scope_has = (scope      , name        )          => {\n\tconst names = scope_names.get(scope);\n\treturn names ? names.has(name) : false;\n};\n\nexport const scope_low = (scope      , globals                                                )       => {\n\tconst names = scope_names.get(scope);\n\tif ( names ) { for ( const name of names ) { globals.set(name, []); } }\n};\n\nexport const scope_old = ()       => {\n\tscope_names = SCOPE_NAMES;\n};\n\n                                                               ",
			"import Error from '.Error';\nimport freeze from '.Object.freeze';\nimport Null from '.null';\n\nimport { scope_add } from './scope';\n\nconst isVarScope = (type        )          =>\n\ttype==='FunctionDeclaration' ||\n\ttype==='FunctionExpression' ||\n\ttype==='ArrowFunctionExpression' ||\n\ttype==='Program';\n\nconst isAnyScope = (type        )          =>\n\ttype==='BlockStatement' ||\n\tisVarScope(type);\n\nconst Pattern = (node         , scope      )       => {\n\tswitch ( node.type ) {\n\t\t\n\t\tcase 'Identifier':\n\t\t\tscope_add(scope, node);\n\t\t\tbreak;\n\t\t\n\t\tcase 'ObjectPattern':{// { Pattern }\n\t\t\tlet index         = 0;\n\t\t\tfor ( const { properties } = node, { length } = properties; index<length; ++index ) {\n\t\t\t\tconst property = properties[index];\n\t\t\t\tswitch ( property.type ) {\n\t\t\t\t\tcase 'Property':// { key: valuePattern }\n\t\t\t\t\t\tPattern(property.value, scope);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'RestElement':// { ...argumentPattern }\n\t\t\t\t\t\tPattern(property.argument, scope);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow Error(`Unrecognized pattern type: ${property.type}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tcase 'ArrayPattern': {// [ , Pattern ]\n\t\t\tlet index         = 0;\n\t\t\tfor ( const { elements } = node, { length } = elements; index<length; ++index ) {\n\t\t\t\tconst element = elements[index];\n\t\t\t\telement && Pattern(element, scope);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tcase 'RestElement':// [ ...argumentPattern ] (...argumentPattern)\n\t\t\tPattern(node.argument, scope);\n\t\t\tbreak;\n\t\t\n\t\tcase 'AssignmentPattern':// leftPattern = right\n\t\t\tPattern(node.left, scope);\n\t\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\tthrow Error(`Unrecognized pattern type: ${node.type}`);\n\t\t\t\n\t}\n};\n\nconst VariableDeclaration = (node                     , parents                 )       => {\n\tconst isScope = node.kind==='var' ? isVarScope : isAnyScope;\n\tlet index         = parents.length;\n\twhile ( index ) {\n\t\tconst parent = parents[--index];\n\t\tif ( isScope(parent.type) ) {\n\t\t\tlet index         = 0;\n\t\t\tfor ( const { declarations } = node, { length } = declarations; index<length; ++index ) { Pattern(declarations[index].id, parent); }\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nconst Function = (scope           )       => {\n\tlet index         = 0;\n\tfor ( const { params } = scope, { length } = params; index<length; ++index ) { Pattern(params[index], scope); }\n\tconst { id } = scope;\n\tid && scope_add(scope, id);\n};\nconst FunctionDeclaration = (node           , parents                 )       => {\n\tconst { id } = node;\n\tif ( id ) {\n\t\tlet index         = parents.length - 1;\n\t\twhile ( index ) {\n\t\t\tconst parent = parents[--index];\n\t\t\tif ( isVarScope(parent.type) ) {\n\t\t\t\tscope_add(parent, id);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tFunction(node);\n};\n\nconst Class = (scope        )       => {\n\tconst { id } = scope;\n\tid && scope_add(scope, id);\n};\nconst ClassDeclaration = (node        , parents                 )       => {\n\tconst { id } = node;\n\tif ( id ) {\n\t\tlet index         = parents.length - 1;\n\t\twhile ( index ) {\n\t\t\tconst parent = parents[--index];\n\t\t\tif ( isAnyScope(parent.type) ) {\n\t\t\t\tscope_add(parent, id);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tClass(node);\n};\n\nconst TryStatement = ({ handler }              )       => {\n\tif ( handler ) {\n\t\tconst { param } = handler;\n\t\tparam && Pattern(param, handler);\n\t}\n};\n\nconst Import$Specifier = ({ local }                  , parents                 )       => {\n\tscope_add(parents[0], local);\n};\n\nexport default /*#__PURE__*/freeze(Null({\n\tVariableDeclaration,\n\tFunctionDeclaration,\n\tFunction,\n\tClassDeclaration,\n\tClass,\n\tTryStatement,\n\tImportSpecifier: Import$Specifier,\n\tImportDefaultSpecifier: Import$Specifier,\n\tImportNamespaceSpecifier: Import$Specifier,\n}));\n\n\n                                                                                         \n                                        \n                                                          ",
			"import Null from '.null';\n\nimport { scope_has } from './scope';\n\nconst add = (globals                                                , node                             , name        )       => {\n\tconst nodes = globals.get(name);\n\tnodes\n\t\t? nodes[nodes.length] = node\n\t\t: globals.set(name, [ node ]);\n};\n\nexport default (globals                                                ) => {\n\t\n\tconst Identifier = (node            , parents                 )       => {\n\t\tconst { name } = node;\n\t\tlet index         = parents.length;\n\t\tif ( name==='arguments' ) {\n\t\t\twhile ( index ) {\n\t\t\t\tconst parent = parents[--index];\n\t\t\t\tif ( scope_has(parent, name) ) { return; }\n\t\t\t\tconst { type } = parent;\n\t\t\t\tif ( type==='FunctionExpression' || type==='FunctionDeclaration' ) { return; }\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\twhile ( index ) {\n\t\t\t\tif ( scope_has(parents[--index], name) ) { return; }\n\t\t\t}\n\t\t}\n\t\tadd(globals, node, name);\n\t};\n\t\n\tconst ThisExpression = (node                , parents                 )       => {\n\t\tlet index         = parents.length;\n\t\twhile ( index ) {\n\t\t\tconst parent = parents[--index];\n\t\t\tconst { type } = parent;\n\t\t\tif ( type==='FunctionExpression' || type==='FunctionDeclaration' || type==='FieldDefinition' && parents[index+1]===( parent                    ).value ) { return; }\n\t\t}\n\t\tadd(globals, node, 'this');\n\t};\n\t\n\treturn Null({\n\t\tIdentifier,// reference\n\t\tVariablePattern: Identifier,// definition\n\t\tThisExpression,\n\t});\n\t\n};\n\n                                                                                ",
			"import version from './version?text';\n\nimport Map from '.Map';\nimport push from '.Array.prototype.push';\nimport apply from '.Reflect.apply';\n\nimport { scope_new, scope_low, scope_old } from './scope';\nimport DECLARATION_VISITORS from './DECLARATION_VISITORS';\nimport ReferenceVisitors from './ReferenceVisitors';\n\nconst { ancestor, base }                                              = require('acorn-walk');\n\nbase.FieldDefinition ?? ( base.FieldDefinition = (\n\tnode                           ,\n\tstate_or_parents                        ,\n\t_continue   \n\t\t                     \n\t\t                              \n\t\t                \n\t         \n)       => {\n\tnode.computed && _continue(node.key, state_or_parents, 'Expression');\n\tconst { value } = node;\n\tvalue && _continue(value, state_or_parents, 'Expression');\n} );\n\nclass Globals extends Map                                            {\n\tnames (             )           {\n\t\treturn [ ...this.keys() ];\n\t}\n\tnodes (             ) {\n\t\tconst nodes                                    = [];\n\t\tfor ( const value of this.values() ) { apply(push, nodes, value); }\n\t\treturn nodes;\n\t}\n}\n\nconst findGlobals = (AST                                             )          => {\n\tscope_new();\n\ttry {\n\t\tconst globals          = new Globals;\n\t\tancestor(AST, DECLARATION_VISITORS);\n\t\tancestor(AST, ReferenceVisitors(globals));\n\t\tAST.type==='Program' && AST.sourceType!=='module' && scope_low(AST, globals);\n\t\treturn globals;\n\t}\n\tfinally { scope_old(); }\n};\n\nimport Default from '.default';\nexport default Default(findGlobals, { version });\n\n                                                                                "
		],
	"names":
		["WeakMap","Error","Set","Map"],
	"mappings":
		"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"
}