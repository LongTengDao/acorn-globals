{
	"version":
		3,
	"file":
		"index.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","Globals.ts","scope.ts","DECLARATION_VISITORS.ts","REFERENCE_VISITORS.ts","default.ts"],
	"sourcesContent":
		[
			"export default'3.0.0';",
			"import Map from '.Map';\nimport push from '.Array.prototype.push';\nimport apply from '.Reflect.apply';\n\nexport default class Globals extends Map                                            {\n\tconstructor () { return super()                   ; }\n\tnames (             )           {\n\t\treturn [ ...this.keys() ];\n\t}\n\tnodes (             ) {\n\t\tconst nodes                                    = [];\n\t\tfor ( const value of this.values() ) { apply(push, nodes, value); }\n\t\treturn nodes;\n\t}\n}\n\n                                                         ",
			"import WeakMap from '.WeakMap';\nimport Error from '.Error';\nimport Set from '.Set';\n\nimport Globals from './Globals';\n\nconst SCOPE_NAMES                             = new WeakMap;\nconst GLOBALS = new Globals;\nconst ROOT = { type: 'Program' };\nlet scope_names                             = SCOPE_NAMES;\nexport let globals          = GLOBALS;\nexport let root       = ROOT;\nexport let notModule          = false;\n\nexport const scope_new = (AST                                                      )       => {\n\tif ( scope_names!==SCOPE_NAMES  ) { throw Error(`Can't start new finding before previous finding finished.`); }\n\tscope_names = new WeakMap;\n\tglobals = new Globals;\n\troot = AST;\n\tnotModule = AST.sourceType!=='module' || AST.type!=='Program';\n};\n\nexport const scope_add = (scope      , { name }            )       => {\n\tconst names = scope_names.get(scope);\n\tnames\n\t\t? names.add(name)\n\t\t: scope_names.set(scope, new Set        ().add(name));\n};\n\nexport const scope_has = (scope      , name        )          => {\n\tconst names = scope_names.get(scope);\n\treturn names ? names.has(name) : false;\n};\n\nexport const globals_add = (node                             , name        )       => {\n\tconst nodes = globals.get(name);\n\tnodes\n\t\t? nodes[nodes.length] = node\n\t\t: globals.set(name, [ node ]);\n};\n\nexport const scope_old = ()       => {\n\tscope_names = SCOPE_NAMES;\n\tglobals = GLOBALS;\n\troot = ROOT;\n};\n\n                                                               ",
			"import Error from '.Error';\nimport freeze from '.Object.freeze';\nimport Null from '.null';\n\nimport { scope_add, root, notModule, globals_add } from './scope';\n\nconst isVarScope = (type        )          =>\n\ttype==='FunctionDeclaration'\n\t||\n\ttype==='FunctionExpression'\n\t||\n\ttype==='ArrowFunctionExpression'\n\t||\n\ttype==='StaticBlock'\n;\n\nconst isLetScope = (type        )          =>\n\ttype==='BlockStatement'\n\t||\n\tisVarScope(type);\n\nconst Pattern = (node         , scope             )       => {\n\tswitch ( node.type ) {\n\t\t\n\t\tcase 'Identifier':\n\t\t\tscope ? scope_add(scope, node) : globals_add(node, node.name);\n\t\t\tbreak;\n\t\t\n\t\tcase 'ObjectPattern':{// { Pattern }\n\t\t\tlet index         = 0;\n\t\t\tfor ( const { properties } = node, { length } = properties; index<length; ++index ) {\n\t\t\t\tconst property = properties[index] ;\n\t\t\t\tswitch ( property.type ) {\n\t\t\t\t\tcase 'Property':// { key: valuePattern }\n\t\t\t\t\t\tPattern(property.value, scope);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'RestElement':// { ...argumentPattern }\n\t\t\t\t\t\tPattern(property.argument, scope);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow Error(`Unrecognized pattern type: ${property.type}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tcase 'ArrayPattern': {// [ , Pattern ]\n\t\t\tlet index         = 0;\n\t\t\tfor ( const { elements } = node, { length } = elements; index<length; ++index ) {\n\t\t\t\tconst element = elements[index];\n\t\t\t\telement && Pattern(element, scope);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tcase 'RestElement':// [ ...argumentPattern ] (...argumentPattern)\n\t\t\tPattern(node.argument, scope);\n\t\t\tbreak;\n\t\t\n\t\tcase 'AssignmentPattern':// leftPattern = right\n\t\t\tPattern(node.left, scope);\n\t\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\tthrow Error(`Unrecognized pattern type: ${node.type}`);\n\t\t\t\n\t}\n};\n\nconst ImportSpecifier_ImportDefaultSpecifier_ImportNamespaceSpecifier = ({ local }                  , parents                 )       => {\n\tscope_add(parents[0] , local);\n};\nexport default /*#__PURE__*/freeze(Null({\n\t\n\tImportSpecifier: ImportSpecifier_ImportDefaultSpecifier_ImportNamespaceSpecifier,\n\tImportDefaultSpecifier: ImportSpecifier_ImportDefaultSpecifier_ImportNamespaceSpecifier,\n\tImportNamespaceSpecifier: ImportSpecifier_ImportDefaultSpecifier_ImportNamespaceSpecifier,\n\t\n\tVariableDeclaration: (node                     , parents                 )       => {\n\t\tconst isScope = node.kind==='var' ? isVarScope : isLetScope;\n\t\tconst { declarations } = node;\n\t\tconst { length } = declarations;\n\t\tlet index         = parents.length;\n\t\twhile ( index>1 ) {\n\t\t\tconst parent = parents[--index] ;\n\t\t\tif ( isScope(parent.type) ) {\n\t\t\t\tindex = 0;\n\t\t\t\twhile ( index<length ) { Pattern(declarations[index++] .id, parent); }\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tindex = 0;\n\t\twhile ( index<length ) { Pattern(declarations[index++] .id, notModule ? null : root); }\n\t},\n\t\n\tFunction: (scope           )       => {\n\t\tlet index         = 0;\n\t\tfor ( const { params } = scope, { length } = params; index<length; ++index ) { Pattern(params[index] , scope); }\n\t\tconst { id } = scope;\n\t\tid && scope_add(scope, id);\n\t},\n\t\n\tFunctionDeclaration: (node           , parents                 )       => {\n\t\tconst { id } = node;\n\t\tif ( id ) {\n\t\t\tlet index         = parents.length - 2;\n\t\t\twhile ( index>0 ) {\n\t\t\t\tconst parent = parents[index--] ;\n\t\t\t\tif ( isLetScope(parent.type) ) {\n\t\t\t\t\tscope_add(parent, id);\n\t\t\t\t\tif ( notModule && parent.type==='BlockStatement' ) {\n\t\t\t\t\t\twhile ( index ) {\n\t\t\t\t\t\t\tif ( isVarScope(parents[index--] .type) ) { return; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tglobals_add(id, id.name);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnotModule ? globals_add(id, id.name) : scope_add(root, id);\n\t\t}\n\t},\n\t\n\tClass: (scope        )       => {\n\t\tconst { id } = scope;\n\t\tid && scope_add(scope, id);\n\t},\n\t\n\tClassDeclaration: (node        , parents                 )       => {\n\t\tconst { id } = node;\n\t\tif ( id ) {\n\t\t\tlet index         = parents.length - 2;\n\t\t\twhile ( index>0 ) {\n\t\t\t\tconst parent = parents[index--] ;\n\t\t\t\tif ( isLetScope(parent.type) ) {\n\t\t\t\t\tscope_add(parent, id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnotModule ? globals_add(id, id.name) : scope_add(root, id);\n\t\t}\n\t},\n\t\n\tTryStatement: ({ handler }              )       => {\n\t\tif ( handler ) {\n\t\t\tconst { param } = handler;\n\t\t\tparam && Pattern(param, handler);\n\t\t}\n\t},\n\t\n}));\n\n                                        \n                                                          \n\n                                                                                         ",
			"import freeze from '.Object.freeze';\nimport Null from '.null';\n\nimport { scope_has, globals_add } from './scope';\n\nconst Identifier_VariablePattern = (node            , parents                 )       => {\n\tconst { name } = node;\n\tlet index         = parents.length;\n\tif ( name==='arguments' ) {\n\t\twhile ( index ) {\n\t\t\tconst parent = parents[--index] ;\n\t\t\tif ( scope_has(parent, name) ) { return; }\n\t\t\tconst { type } = parent;\n\t\t\tif ( type==='FunctionExpression' || type==='FunctionDeclaration' ) { return; }\n\t\t}\n\t}\n\telse {\n\t\twhile ( index ) {\n\t\t\tif ( scope_has(parents[--index] , name) ) { return; }\n\t\t}\n\t}\n\tglobals_add(node, name);\n};\n\nexport default /*#__PURE__*/ freeze(Null({\n\tIdentifier: Identifier_VariablePattern,// reference\n\tVariablePattern: Identifier_VariablePattern,// definition\n\tThisExpression: (node                , parents                 )       => {\n\t\tlet index         = parents.length;\n\t\twhile ( index ) {\n\t\t\tconst parent = parents[--index] ;\n\t\t\tconst { type } = parent;\n\t\t\tif ( type==='FunctionExpression' || type==='FunctionDeclaration' || type==='StaticBlock' || type==='PropertyDefinition' && parents[index+1]===( parent                       ).value ) { return; }\n\t\t}\n\t\tglobals_add(node, 'this');\n\t},\n}));\n\n                                                                                   ",
			"import version from './version?text';\n\nimport { globals, scope_new, scope_old } from './scope';\nimport DECLARATION_VISITORS from './DECLARATION_VISITORS';\nimport REFERENCE_VISITORS from './REFERENCE_VISITORS';\n\nconst { ancestor }                              = require('acorn-walk');\n\nconst findGlobals = (AST      ) => {\n\tscope_new(AST);\n\ttry {\n\t\tancestor(AST, DECLARATION_VISITORS);\n\t\tancestor(AST, REFERENCE_VISITORS);\n\t\treturn globals;\n\t}\n\tfinally { scope_old(); }\n};\n\nimport Default from '.default';\nexport default Default(findGlobals, { version });\n\n                                   "
		],
	"names":
		["Map","WeakMap","Error","Set"],
	"mappings":
		"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"
}